<?php

/**
 * @file
 * This is the primary module file.
 */

use Drupal\commerce_product\Entity\ProductType;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Url;

/**
 * Implements hook_help().
 */
function commerce_quick_edit_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.commerce_quick_edit':
      $output = '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Provides a modal form for quick product editing.') . '</p>';
      return $output;
  }
}

/**
 * Implements hook_entity_extra_field_info().
 */
function commerce_quick_edit_entity_extra_field_info() {
  $extra_field = [];

  foreach (ProductType::loadMultiple() as $bundle) {
    $extra_field['commerce_product'][$bundle->Id()]['display']['quick_product_edit'] = [
      'label' => t('Quick product edit'),
      'description' => t('Quick product edit.'),
      'weight' => -100,
      'visible' => TRUE,
    ];
  }

  return $extra_field;
}

/**
 * Implements hook_ENTITY_TYPE_view().
 */
function commerce_quick_edit_entity_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {
  $user = \Drupal::currentUser();
  if (
    $display->getComponent('quick_product_edit') &&
    $user->hasPermission('access commerce administration pages')
  ) {
    $build['quick_product_edit'] = [
      '#type' => 'link',
      '#title' => t('Quick edit'),
      '#url' => Url::fromRoute('commerce_quick_edit.product_edit', [
        'id' => $entity->id(),
      ]),
      '#attributes' => [
        'class' => [
          'use-ajax',
        ],
      ],
    ];
    $build['#attached']['library'][] = 'core/drupal.dialog.ajax';
  }
}

/**
 * Implements hook_form_alter().
 */
function commerce_quick_edit_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $info = $form_state->getBuildInfo();
  if (!isset($info['base_form_id']) || ($info['base_form_id'] !== 'commerce_product_form')) {
    return;
  }

  foreach (array_keys($form['actions']) as $action) {
    if (
      $action != 'preview' &&
      isset($form['actions'][$action]['#type']) &&
      $form['actions'][$action]['#type'] === 'submit'
    ) {
      $form['actions'][$action]['#submit'][] = 'commerce_quick_edit_set_redirect';
    }
  }
}

/**
 * Set form redirect.
 */
function commerce_quick_edit_set_redirect($form, FormStateInterface $form_state) {
  $form_state->setRedirectUrl(Url::fromUri($_SERVER['HTTP_REFERER']));
}
